@{
    IEnumerable<SkemaSystem.Models.Education> EducationModel = ViewBag.EducationModel;
     
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Skema System!</title>
    @Styles.Render("~/Content/less","~/Content/JQueryUI/jquery-ui-1.10.4.custom")
    @*@Scripts.Render("~/bundles/modernizr")*@
    @Scripts.Render("~/bundles/scripts")
    @if (@Request.IsAuthenticated)
    {
        @Scripts.Render("~/bundles/scripts/backend")
    }
    <script type="text/javascript" src="@Url.Content("/Scripts/schemesys.js")"></script>
</head>
<body>
    <header>
        <div>
            <div id="logo">@Html.ActionLink("SKEMASYS", "Index", "Home", new { area = "" }, new { @style = "color:#FFF!important; text-decoration:none!important;" })</div>
            <nav class="subnav">
                <ul>
                    @Html.Partial("_LoginPartial")
                </ul>
            </nav>
        </div>
        <nav>
            <ul>
                @{var e = ViewContext.RouteData.Values["education"];}
                @foreach (var education in @EducationModel)
                {
                    if (ViewContext.RouteData.DataTokens.ContainsKey("area") && ViewContext.RouteData.DataTokens["area"].Equals("Admin"))
                    {
                        @*var clazz = (e != null && e.ToString().Equals(education.Name, StringComparison.OrdinalIgnoreCase)) ? "selected" : "";
                        <li><a href="@Url.RouteUrl("Schedule", new { education = education.Name.ToLower() })" class="@clazz">@education.Name</a></li>*@
                        <li>@Html.ActionLink(education.Name, "Index", new { education = education.Name.ToLower() }, new { @class = (e != null && e.ToString().Equals(education.Name, StringComparison.OrdinalIgnoreCase)) ? "selected" : "" })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink(education.Name, "Index", "Home", new { education = education.Name.ToLower(), Area = "Default" }, new { @class = (e != null && e.ToString().Equals(education.Name, StringComparison.OrdinalIgnoreCase)) ? "selected" : "" })</li>
                    }
                }
            </ul>
        </nav>
    </header>

    <main>
        <div class="wrapper">
            @if (IsSectionDefined("Subheader"))
            {
                <section class="subheader">
                    @RenderSection("Subheader", required: false)
                </section>
            }
            <section>
                <div class="body-content">
                    @RenderBody()
                </div>
            </section>
        </div>
    </main>

    @*@Scripts.Render("~/bundles/jquery")*@
    @RenderSection("scripts", required: false)
</body>
</html>
